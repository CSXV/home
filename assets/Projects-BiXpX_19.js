import{j as e,S as r}from"./react-DSBgOPP-.js";import"./vendor-CPN78QRH.js";import"./r3f-BFNYfhBP.js";import"./three-DQuK2cH5.js";import"./rapier-BodjHcp2.js";const n=[{id:1,title:"DVLD",description:"Full-stack desktop driving department system. Implements complex database design to automate manual processes.",image:"1.webp",link:"https://github.com/CSXV/DVLD",stack:["nf-dev-csharp","nf-dev-dotnet","nf-dev-microsoftsqlserver","WF"],category:"fullstack",date:"10/2024"},{id:2,title:"Book library tracker",description:"Full-stack desktop app. Features a library i made that adapts the UI colors based on user preferences.",image:"2.gif",link:"https://github.com/CSXV/MBL",stack:["nf-dev-csharp","nf-dev-dotnet","nf-dev-microsoftsqlserver","WF"],category:"fullstack",date:"12/2024"},{id:3,title:"Focus flow",description:"Full-stack To-Do web app. Features a sleek Neumorphism UI for a modern look.",image:"7.webp",link:"https://github.com/CSXV/FoucsFlow",stack:["nf-dev-csharp","nf-dev-dotnetcore","nf-dev-postgresql","nf-dev-react","nf-dev-reactrouter","nf-md-api","nf-dev-typescript","nf-dev-vitejs"],category:"fullstack",date:"07/2025"},{id:4,title:"Galaxy generator",description:"Interactive galaxy generator built with custom GLSL shaders in WebGL, creating stunning, dynamic visuals in the browser.",image:"3.webp",link:"https://csxv.github.io/WebGL-galaxy-generator/",stack:["nf-dev-javascript","nf-dev-threejs","nf-dev-opengl","GLSL"],category:"nf-dev-opengl",date:"08/2025"},{id:5,title:"Sea generator",description:"Ocean and sea generator using custom GLSL shaders in WebGL, simulating realistic water movement and effects in the browser.",image:"4.webp",link:"https://csxv.github.io/WebGL-sea-generator/",stack:["nf-dev-javascript","nf-dev-threejs","nf-dev-opengl","GLSL"],category:"nf-dev-opengl",date:"08/2025"},{id:6,title:"Chef claude",description:"Web app that takes user ingredients and sends them to an AI API to generate personalized recipes based on whatâ€™s available.",image:"6.webp",link:"https://github.com/CSXV/Chef-Claude",stack:["nf-dev-react","nf-md-api","nf-dev-typescript","nf-dev-html5","nf-dev-css3","nf-dev-vitejs"],category:"Ai",date:"06/2025"},{id:7,title:"Stone, paper, scissor",description:"My first project ever. A terminal game built in C++ using OOP principles. Features ASCII art with Figlet and basic AI for computer moves.",image:"8.webp",link:"https://github.com/CSXV/Chef-Claude",stack:["nf-custom-cpp","nf-dev-linux"],category:"Cpp",date:"03/2024"},{id:8,title:"Tenzies game",description:"Web mini-game. Features simple controls and smooth animations.",image:"9.webp",link:"https://csxv.github.io/Tinzies/",stack:["nf-dev-react","nf-dev-typescript","nf-dev-css3","nf-dev-html5","nf-dev-vitejs"],category:"React",date:"05/2025"},{id:9,title:"Tic-Tac-Toe",description:"Classic game on web, styled in Neubrutalism UI for a raw, bold, minimalist aesthetic.",image:"10.webp",link:"https://csxv.github.io/TicTacToeWeb/",stack:["nf-dev-react","nf-dev-typescript","nf-dev-css3","nf-dev-html5","nf-dev-vitejs"],category:"Cpp",date:"05/2025"}];function c(){const s={arrows:!1,dots:!0,infinite:!0,autoplay:!0,pauseOnHover:!0,autoplaySpeed:1700,cssEase:"linear",speed:500,slidesToShow:4,slidesToScroll:1,responsive:[{breakpoint:1024,settings:{slidesToShow:3}},{breakpoint:600,settings:{slidesToShow:1}}]};return e.jsx("div",{className:"projects-container",children:e.jsx(r,{...s,children:n.map(t=>e.jsx("a",{href:t.link,target:"_blank",rel:"noopener noreferrer",children:e.jsx("div",{className:"project-card-wrapper",children:e.jsxs("div",{className:"project-card",children:[e.jsx("img",{src:`/home/images/${t.image}`,alt:t.title,className:"project-image",loading:"lazy"}),e.jsxs("div",{className:"project-info",children:[e.jsx("h3",{children:t.title}),e.jsx("hr",{className:"project-hr"}),e.jsxs("div",{className:"project-extra",children:[e.jsx("p",{children:t.description}),e.jsx("p",{className:"project-stack-list",children:t.stack.map((a,i)=>e.jsx("i",{className:`nf ${a}`},i))})]}),e.jsx("p",{className:"project-date",children:t.date})]})]})})},t.id))})})}function f(){return e.jsxs("section",{className:"full-page projects red-back",children:[e.jsxs("div",{className:"sectionHeading-Projects",children:[e.jsxs("h2",{children:["Crafting digital"," ",e.jsx("span",{className:"italic-fancy green-text",children:"dreams"})]}),e.jsx("h2",{children:"with every project"})]}),e.jsx(c,{})]})}export{f as default};
